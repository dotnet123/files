@page "{handler?}/{id?}"
@model WebApplication1.Pages.Customer.AddModel
@{
    ViewData["Title"] = "Add";
    Layout = "~/Pages/Part/Layout1.cshtml";
}
<form asp-page-handler="Add" method="post"><input type="submit" value="Add" class="btn btn-success" /></form><br />
<fieldset class="layui-elem-field layui-field-title" style="margin-top: 50px;">
    <legend>方框风格的表单集合</legend>
</fieldset>
<form class="layui-form layui-form-pane" asp-page-handler="Add" method="post">
    <div class="layui-form-item">
        <label class="layui-form-label">长输入框</label>
        <div class="layui-input-block">
            <input type="text" name="CompanyName" autocomplete="off" placeholder="请输入标题" class="layui-input">
        </div>
    </div>
    <input type="submit" value="Addaaaa" class="btn btn-success" />

    <div class="layui-form-item">
        <button class="layui-btn" lay-submit="" lay-filter="demo2">跳转式提交</button>

    </div>
</form>
<script>


    //  var index = parent.layer.getFrameIndex(window.name); //获取窗口索引


    layui.use('form', function () {
        var $ = layui.jquery;
        var form = layui.form; //只有执行了这一步，部分表单元素才会自动修饰成功
        form.on('submit(demo2)', function (data) {
            console.log(data.elem);//被执行事件的元素DOM对象，一般为button对象
            console.log(data.form); //被执行提交的form对象，一般在存在form标签时才会返回
            console.log(data.field); //当前容器的全部表单字段，名值对形式：{name: value}


            $.post(
                "/customer/add?handler=Add",
                data.field,
                function (data2, state2) {
                    //这里显示从服务器返回的数据
                    alert(data2);
                    //这里显示返回的状态
                    alert(state2);
                },
                "json"
            );



            return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
        });
    });

</script>




